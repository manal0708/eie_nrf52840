GPIO - read and write digital signals to and from physical pins on microcontroller
     -> configure pin = set various register (register are logic circits that store a value)
Zephyr RTOS - provides a hardware abstraction layer that makes code easier to read
    -> in Zephyr, a summary of each folder can be found as:
    .cache: generated by the build system; ignored by us
    .vscode: folder storing project specific config. for vscode
    app: containing all source code for project; what we will work w/ most
    build: where compiled object files get generated
    doc: contains documentation and lesson plan docs
    scripts: contains helper scripts west uses to flash the board
    zephyr: contains west manifest which told west what to update previously

    Basics of C:
    1. using built-in integer types; check lesson plan for detail
    2. more convenient to write integers in hexadec and binary sometimes. hexadec indicated by "0x" in the beginning
    and binary indicated by "0b" at the beginning 
    3. bitwise operators: & (and), | (or), ^ (XOR i.e. only true if both inputs diff.)
    ~ (not), << (left shift), >> (right shift)
     
